name: Check Pull Request

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  SonarQube:
    runs-on: self-hosted
    steps:
      - uses: AutoModality/action-clean@v1
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: ${{ github.event.repository.name }}
      - name: SonarQube [Pull Request]
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.pullrequest.provider=github
            -Dsonar.pullrequest.github.repository=${{ github.repository }}
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.working.directory=/tmp/sonar
            -Dsonar.projectBaseDir=${{ github.event.repository.name }}
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_HOST_URL: http://ci-cd.lucasmercier.com:9001
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
  Build:
    runs-on: self-hosted
    steps:
      - uses: AutoModality/action-clean@v1
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: ${{ github.event.repository.name }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install angular cli
        run: npm install -g @angular/cli
      - name: Gradle build
        run: cd ${{ github.event.repository.name }} && npm install && ng build
